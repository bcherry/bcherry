/* $Id: auxlib.c,v 351.1 2005-02-11 18:07:57-08 - - $ */

#include <assert.h>
#include <errno.h>
#include <libgen.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <strings.h>

#include "auxlib.h"

static constring progname = NULL;
static int exitcode = EXIT_SUCCESS;

void set_progname( cstring arg0 ){
   progname = basename( arg0 );
   /*
   * constring slash = NULL;
   * assert( arg0 != NULL );
   * slash = strrchr( arg0, '/' );
   * if( slash == NULL ) progname = arg0;
   *                else progname = slash + 1;
   */
}

void eprintf( constring format, ... ){
   va_list args;
   assert( format != NULL );
   xfflush( stdout );
   if( strstr( format, "%:" ) == format ){
      assert( progname != NULL );
      xfprintf( stderr, "%s: ", progname );
      format += 2;
   };
   va_start( args, format );
   xvfprintf( stderr, format, args );
   va_end( args );
   xfflush( stderr );
   exitcode = EXIT_FAILURE;
}

void syseprintf( constring object ){
   eprintf( "%:%s: %s\n", object, strerror( errno ));
}

int get_exitcode( void ){
   return exitcode;
}

void __stubprintf( char *file, int line, const char *func,
                   char *format, ... ){
   va_list args;
   assert( progname != NULL );
   xfflush( stdout );
   xfprintf( stderr, "%s: %s[%d]%s: ", progname, file, line, func );
   va_start( args, format );
   xvfprintf( stderr, format, args );
   va_end( args );
   xfflush( stderr );
}

